- name: install common packages
  apt: name={{ item }} state=present
  with_items:
  - apt-transport-https
  - bash-completion
  - ca-certificates
  - conntrack
  - curl
  - software-properties-common
  - socat
  - vim
  - tree
  - tmux
  - wget
  - iotop
  - iftop
  - htop
  - unattended-upgrades
  - python-pip
  - python-apt
  - lsof
  - rsync
  - nfs-common

- name: disable and stop rpcbind service
  systemd: name=rpcbind state=stopped enabled=no

- name: gen locale(s)
  locale_gen: name={{ item }} state=present
  with_items:
  - "{{ gen_locales }}"

- name: set timezone to {{ timezone }}
  timezone: name={{ timezone }}
  notify:
  - restart_cron

- name: sync time with ntp
  template: src=timesyncd.conf.j2 dest=/etc/systemd/timesyncd.conf
  notify:
  - restart_timesyncd

- name: set journald storage to persistent
  lineinfile: line='Storage=persistent' insertafter='^[Journal]' dest=/etc/systemd/journald.conf
  notify: restart_journald

- name: disable swap
  shell: |
    #!/bin/bash -e
    swapoff -a &&\
    umount $(grep swap /etc/fstab | awk '{print $1}') || true &&\
    sed 's/^[^#]\(.*\)swap\(.*\)$/#\1swap\2/g' -i /etc/fstab

- name: disable ipv6
  copy: src=99-disable-ipv6.conf dest=/etc/sysctl.d/99-disable-ipv6.conf
  notify: sysctl_disable_ipv6

- name: add all cluster nodes to /etc/hosts
  blockinfile:
    path: /etc/hosts
    insertafter: EOF
    marker: "# {mark} k8s cluster hosts"
    block: |
      {% for host in groups['all'] %}
      {% set hostname = hostvars[host]['ansible_hostname'] %}
      {{ hostvars[host]['ansible_default_ipv4']['address'] }} {{ hostname }} {{ hostname }}.cluster.local {{ hostvars[host]['ansible_fqdn'] }}
      {% endfor %}

- name: create /etc/kubernetes directory
  file: path=/etc/kubernetes state=directory recurse=yes

- name: create script to get component versions
  copy: src=component-version.sh dest=/etc/kubernetes/component-version.sh mode=0755

- name: get current cfssl version
  shell: /etc/kubernetes/component-version.sh cfssl
  register: current_cfssl_version

- name: get cfssl
  get_url: dest=/usr/local/bin/{{ item.dest }} url={{ item.url }} mode=0755 force=yes
  with_items:
  - { dest: "cfssl", url: "https://pkg.cfssl.org/R{{ cfssl_version }}/cfssl_linux-amd64" }
  - { dest: "cfssljson", url: "https://pkg.cfssl.org/R{{ cfssl_version }}/cfssljson_linux-amd64" }
  when: current_cfssl_version.stdout != cfssl_version

- name: get current calicoctl version
  shell: /etc/kubernetes/component-version.sh calicoctl
  register: current_calicoctl_version

- name: get calicoctl
  get_url:
    dest: /usr/local/bin/calicoctl
    url: https://github.com/projectcalico/calicoctl/releases/download/v{{ calicoctl_version }}/calicoctl
    mode: 0755
    force: yes
  when: current_calicoctl_version.stdout != calicoctl_version

- name: get current kubernetes version
  shell: /etc/kubernetes/component-version.sh kubernetes
  register: current_kubernetes_version

- debug: msg="kubernetes version, current {{ current_kubernetes_version.stdout }}, desired {{ kubernetes_version }}"

- name: get hyperkube
  get_url:
    dest: /usr/local/bin/hyperkube
    url: https://storage.googleapis.com/kubernetes-release/release/v{{ kubernetes_version }}/bin/linux/amd64/hyperkube
    mode: 0755
    force: yes
  when: current_kubernetes_version.stdout != kubernetes_version

- name: create hyperkube kubectl wrapper script
  copy: src=kubectl-wrapper dest=/usr/local/bin/kubectl mode=0755

- name: enable kubectl bash completion
  shell: kubectl completion bash > /etc/bash_completion.d/kubectl
